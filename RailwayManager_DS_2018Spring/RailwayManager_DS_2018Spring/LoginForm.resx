<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="VerificationCode.CodeImg" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIIAAAA1CAYAAACNzDMwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAATGSURBVHhe7Vw9duQgDPZRttxrpMh7KbfIGbZIN+/lHinT
        5A5TT5UT5ADpUucE23n9MxiBhZAAG5xRkWYGG5A+ffokyHTf//pe/9QGnYJAQTBiQIGgjDhlBAWCAkGB
        oGlxYIKuUyDcIhBGx6N/t2iMW9lz0OkYGG7FKLe2zxgIfHuoWPxBYpFy/lQZXPUAFhQKhIMDQRr5IWZU
        IBwUCLHol6bCYwDh8owr3YHq/jyOKvihf/lsr0P48fpg133/VqSVHwKA1PGH0wgv96DcWYz53j8hyvfu
        9auIsWNGNQ5+uiDgI0ALnYg+G2Cn0tF/OI1wPl1BEIgmJ+IMMIaxH5vR/Vdvgfncn715lvWOazm9o6B0
        gN2t37GK1EDdHwOr9Pt2U8PnW383GSFirGHcb8RYkohjG21ZU9f77GNBEHfuOB8Ejb/WPRjgMKnBRDuL
        7i9/cQ0RiErM8edT3IGWgVxNYj+PvwPODRnN7BMDARuoGUzYLCOQeRjZ8Ey5vxBA0M5x6JwUnSAtwPSz
        aIJEwQpYphYImj59lAJhdujoDFxIUqnC1xroWOAw+72dKzUVbVUFSFmkWUb4vkYaKzUMDDEzgo1KN9Kt
        6AwKST8yvbSCaQAj/Lhr5AlBWXqROrzhhhIewTZSOIYx7/DGorRLUbi3liUFgM+vAFmAIdAhxgkhFjDv
        TAVWDijqMoJTc0MHeQ6JGHuhdrTMhCWf7UmEje2PH8Dl6QAnlQiBQOoAM0+h5pMEGPWAgOZcv0GzjsTV
        5phiDe05EE4M9ijQhhHNWnwdEGC2jGqAC4YJCGah3IdKjOPn1zVdT/N7tM+iUyxVUBHtOX2cw9C3EYdW
        O+ApR1oJ+FqnhK057xjWub6xwnkwa4xxCJcCybattGxbpwpJRYF1DEv2A6oBATICBEWWo2NUZhwryK+z
        gTjCkXf45FQVwbY0ri86bHyhfkBVIFBqdhNACEtD25KVRj8FCphyAu/1dIyrG9xnyrSFK2sETn1bFBAJ
        jODn5vz1wGjHgYCeH3hpyqQVHAhC4CbYJd8Oc7AEqwa+0uVRsbNgqUZYDmmEhiVTFGQELOUQFQuRBsw+
        IXvwuo75XcocUETLx63EpKkaZEbaSCNgWoUoS9EgwXQDZI+IHlqOpwW6KcfxqyzAfVlxQCxRFY/ynI6b
        PYOwzEXl+tkegQOmK8OE9QC2F8AssXsV3CoqJsYTvo8yAkc/ULdjKaBx6FN6zg/nQ5tCXrmM9h+Iewe+
        sLZClj7PCF5oWVijHNtxgxuOEwMhVG6mgsEcLtG3cdOMhB48QSAEaDh07yDFwPCZ1WUUASvmzh17PgkI
        DpIKXaUKOY2nIbhlommeMQ+etrj2hjTHWF3RBLqPOT+bEbAJytTRCRVIaQMBR+WDMLAfWHVUEofJYpGD
        rlL/bMGZa6sxEzNtwQQAsLFLuVvtjXpvdmoIvXzTPkRpFtjzfdxLuXuuaY8fyvgJLFEjQveeczNGwMrO
        4hXHzlGzt3P2nG83IFACc88N61y4gK0KBHVKA1WS6ZaqM9pxRk1fKCOoztAf06oZga3NrYygjKCM0FpU
        1lyPMoIygjJCzQhsbW5lBGUEZYTWorLmepQRlBGUEWpGYGtzKyMoIygjtBaVNdfzHywfsPSy+allAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>