<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="VerificationCode.CodeImg" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIIAAAA1CAYAAACNzDMwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAARFSURBVHhe7ZxLctswDIZ1OOc8zuQWPUA8vkk8k3tkssgx
        Ml10o1q0KVMgSP6g+EqLRRZtKFEEPvx4SJPp+8/vWX/UBpNCoBAsDCgIqogmIygICoKCoGnxkRZVEVQR
        VBFUEVQRtGUmSqipoXpquMzHaZon7+d5fqu+N94a/2gQ3l4cAz+dBovyEAAUijGA+BEg+NHERRj4fy2A
        +TrNB1YFws94fMejt0ZtMzQIKACLYaw6uAb9OB8YSb474+VSSUEYJbjC90HSwEbNDDSH+fWrHwzDgoBC
        sF0HGNON1gowUAcfzp9h4N6ft6AywNSIfu6eQ4IQg8Aegl8DgGAi8xG1UUdJizmaEgDHUnB6pYjhQOAc
        HIsKuh6uxFenlSvWaCqCnErhqaBSiKoMBYIUgpA6IAdf1rw+lc3N2+jGAcu9Dj0nsm5oEJAD3NZcNrkW
        vY4rMNFr/XWfd7DuxSiQFuw9tkqCpreyheW/AcJVXl01QZ1ZVhFItyAA4Zukh6J1C1jnDAsC6kyzLgcE
        W7EXmysoCEX6cVofiECgbdi1L49e76yHCjooqkhqmPAawe1ijB06FIzDKEJJEEIQpKr66ABKOCmUDYiI
        mvQCYXGCazz6b1F0QtHDFzo5ed48G6MI0YEUa2j03QA4ypZE9gAtpFGEnCleDThyVYG9joEjnQYkgyaa
        ChZJ/+W9aUzuyUHcQxFyIECvCcESUpwcEKDZg2PsZEW+ro20cZ7znLWMY/k9IwrUAwTqLGtYVCnQdTGH
        uWBIYIAgsKnKkd8UDOuAx2sBORXwX15Ja43D+bRVkhFAQCXfBWYPDKi6oIBGn3+FITW0YVKEF+mJrgCs
        W0zq+B/nCFLHl1jvwrFGa2p+EHFkSlHc/fzXzbdic3MPsleyrhAU5GgANW8fkc4glipywKAqcZsoTnPK
        4L4T4yqQejarnKUVtMj90FRQYp0k/8cKTd7gN7mH9ki+efQLOUQFUBBS61r83trXBt2QiiCB4DGVk0zy
        Hl80UQeHC71UXZFuw9HIXb5mosq5Ouw+86GquTdQu4IQaiO5Q4U7BBu9MhAeBZpzHZurnU4h8SIp63Uy
        2RNRnr1OZ+1b46apeyJ1Ap10yuUyDYZ1nGt8owjU4ddUcox9cnYv3uSvk2k7mladlG1zf99cEULyiKpA
        WEUy5vXMp2W5hjTXSaObdiYd5gdrrbDr4II2hu4jj/BbpV/jeVdluCoB/Kkbe3ZBhHufvPdTAxOcNQwr
        uacECMl9u63l5g+bVMNMJ+lcYUeA5Z67OwipSjr3YF2vA6eKNgh6FYibOqyrwTqQ3+68yGvtvulAQWgN
        YMURcimwh0gNpQ6j98n/sllBaK0Og+6nIAzqmNbqpiAoCPo3lFpH3cj7qSKoIqgijByhrZ9NFUEVQRWh
        ddSNvJ8qgiqCKsLIEdr62VQRVBFUEVpH3cj7qSKoIqgijByhrZ/tL9SXZZH95sZIAAAAAElFTkSuQmCC
</value>
  </data>
</root>